{"version":3,"file":"15.test.js","sourceRoot":"","sources":["../../../spec/issues/15.test.ts"],"names":[],"mappings":";;AAAA,2BAAuB;AAEvB,yCAA6C;AAM7C,aAAI,CAAC,qCAAqC,EAAE,UAAA,CAAC;IACzC,IAAM,GAAG,GAAG,KAAK,CAAC;IAClB,IAAM,GAAG,GAAG,kBAAU,CAAC,GAAG,EAAW,CAAC;IAEtC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAErB,IAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;IACtB,IAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;IAEtB,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACjB,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC","sourcesContent":["import test from 'ava';\r\n\r\nimport { Substitute } from '../../src/index';\r\n\r\nexport interface Example {\r\n    bar: string;\r\n}\r\n\r\ntest('issue 15: can call properties twice', t => {\r\n    const baz = \"baz\";\r\n    const foo = Substitute.for<Example>();\r\n\r\n    foo.bar.returns(baz);\r\n\r\n    const call1 = foo.bar;\r\n    const call2 = foo.bar;\r\n\r\n    t.is(call1, baz);\r\n    t.is(call2, baz);\r\n});"]}